{"version":3,"sources":["components/Buttons.js","components/App.js","index.js"],"names":["Button","props","onButtonClick","type","className","content","onClick","App","setInterval","newTime","Date","toLocaleTimeString","setTime","now","useState","value","setValue","memory","setMemory","operator","setOperator","time","handleButtonPress","num","parseFloat","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f155180c.chunk.js","sourcesContent":["import react from 'react';\r\n\r\nimport \"./Button.css\";\r\n\r\nfunction Button(props, onButtonClick ,type) {\r\n    return (\r\n       <div className={`button ${props.content === \"0\" ? \"zero\" : \"\"} ${props.type ||\r\n       \"\"}`}\r\n        onClick={props.onButtonClick(props.content)}\r\n        >\r\n       {props.content}\r\n       </div>\r\n    );\r\n};\r\nexport default Button;  ","// eslint-disable-next-line\r\nimport React,{useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nimport \"./App.css\";\r\nimport Button from \"./Buttons\";\r\n\r\nconst App = () => {\r\n    \r\n    \r\n    setInterval(updateTime,1000);\r\n    const now = new Date().toLocaleTimeString();\r\n    const [value,setValue] = useState(\"0\");\r\n    const [memory,setMemory] = useState(null);\r\n    const [operator,setOperator] = useState(null);\r\n    const [time,setTime] = useState(now);\r\n\r\n\r\n\r\n    function updateTime(){\r\n        const newTime = new Date().toLocaleTimeString();\r\n        setTime(newTime);\r\n    }\r\n    \r\n\r\n    const handleButtonPress = content  => () => {\r\n\r\n        const num = parseFloat(value);\r\n\r\n\r\n        if(content === \"AC\") {\r\n            setValue(\"0\");\r\n            setMemory(null);\r\n            setOperator(null);\r\n            return;\r\n        }\r\n\r\n        if(content=== \"±\") {\r\n            setValue((num * -1).toString());\r\n            setOperator(null);\r\n            return;\r\n        }\r\n\r\n        if( content === \"%\") {\r\n            setValue((num / 100).toString());\r\n            setOperator(null);\r\n            return;\r\n        }\r\n\r\n        if(content ===\".\") {\r\n\r\n        }\r\n\r\n        if( content === \"+\") {\r\n            if(operator !== null) {\r\n                if(operator === \"+\"){\r\n                    setValue(memory + parseFloat(value));\r\n                } else if(operator === \"-\") {\r\n                    setValue(memory - parseFloat(value));\r\n                } else if(operator === \"×\") {\r\n                    setValue(memory * parseFloat(value));\r\n                } else if(operator === \"÷\") {\r\n                    setValue(memory / parseFloat(value));\r\n                }\r\n            } else {\r\n                setMemory(parseFloat(value));\r\n            }\r\n            setMemory(parseFloat(value));\r\n            setOperator(\"+\");\r\n            setValue(\"0\");\r\n            return;\r\n        }\r\n\r\n        if( content === \"-\") {\r\n            if(operator !== null) {\r\n                if(operator === \"+\"){\r\n                    setValue(memory + parseFloat(value));\r\n                } else if(operator === \"-\") {\r\n                    setValue(memory - parseFloat(value));\r\n                } else if(operator === \"×\") {\r\n                    setValue(memory * parseFloat(value));\r\n                } else if(operator === \"÷\") {\r\n                    setValue(memory / parseFloat(value));\r\n                }\r\n            } else {\r\n                setMemory(parseFloat(value));\r\n            }\r\n            setMemory(parseFloat(value));\r\n            setOperator(\"-\");\r\n            setValue(\"0\");\r\n            return;\r\n        }\r\n\r\n        if( content === \"×\") {\r\n            if(operator !== null) {\r\n                if(operator === \"+\"){\r\n                    setValue(memory + parseFloat(value));\r\n                } else if(operator === \"-\") {\r\n                    setValue(memory - parseFloat(value));\r\n                } else if(operator === \"×\") {\r\n                    setValue(memory * parseFloat(value));\r\n                } else if(operator === \"÷\") {\r\n                    setValue(memory / parseFloat(value));\r\n                }\r\n            } else {\r\n                setMemory(parseFloat(value));\r\n            }\r\n            setMemory(parseFloat(value));\r\n            setOperator(\"×\");\r\n            setValue(\"0\");\r\n            return;\r\n        }\r\n\r\n        if( content === \"÷\") {\r\n            if(operator !== null) {\r\n                if(operator === \"+\"){\r\n                    setValue(memory + parseFloat(value));\r\n                } else if(operator === \"-\") {\r\n                    setValue(memory - parseFloat(value));\r\n                } else if(operator === \"×\") {\r\n                    setValue(memory * parseFloat(value));\r\n                } else if(operator === \"÷\") {\r\n                    setValue(memory / parseFloat(value));\r\n                }\r\n            } else {\r\n                setMemory(parseFloat(value));\r\n            }\r\n            setMemory(parseFloat(value));\r\n            setOperator(\"÷\")\r\n            setValue(\"0\");\r\n            return;\r\n        }\r\n\r\n        if(content === \"=\") {\r\n\r\n            if(!operator) return;\r\n\r\n            if(operator !== null) {\r\n                if(operator === \"+\"){\r\n                    setValue(memory + parseFloat(value));\r\n                } else if(operator === \"-\") {\r\n                    setValue(memory - parseFloat(value));\r\n                } else if(operator === \"×\") {\r\n                    setValue(memory * parseFloat(value));\r\n                } else if(operator === \"÷\") {\r\n                    setValue(memory / parseFloat(value));\r\n                }\r\n            } else {\r\n                setMemory(parseFloat(value));\r\n            }\r\n            setOperator(null);\r\n            setMemory(null);\r\n            return;\r\n        }\r\n\r\n        setValue(parseFloat(num + content).toString());\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"top\">\r\n                <div className=\"time\">\r\n                {time}\r\n                </div>\r\n            </div>\r\n            <div className=\"display\">{value}</div>\r\n            <div className=\"buttons\">\r\n                <Button onButtonClick={handleButtonPress}  content=\"AC\" type=\"function\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"±\"  type=\"function\"/>\r\n                <Button onButtonClick={handleButtonPress} content=\"%\" type=\"function\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"÷\" type=\"operator\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"7\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"8\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"9\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"×\" type=\"operator\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"4\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"5\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"6\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"-\" type=\"operator\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"1\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"2\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"3\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"+\" type=\"operator\" />\r\n                <Button onButtonClick={handleButtonPress} content=\"0\" />\r\n               \r\n                <Button onButtonClick={handleButtonPress} content=\"=\" type=\"operator\" />\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}